plugins {
    id 'java'
    id 'io.qameta.allure' version '2.12.0'
}

group = 'tst.yev'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.36'
    allureVersion = '2.29.1'
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "io.rest-assured:rest-assured:5.5.0"
    testImplementation "org.assertj:assertj-core:3.27.3"
    testImplementation "io.qameta.allure:allure-junit5:${allureVersion}"

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'org.seleniumhq.selenium:selenium-java:4.29.0'
    implementation "io.github.cdimascio:java-dotenv:5.2.2"
    implementation "io.qameta.allure:allure-rest-assured:${allureVersion}"
    implementation "org.slf4j:slf4j-api:2.0.17"
    implementation 'ch.qos.logback:logback-classic:1.5.18'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

def selectedTags = System.getProperty('TEST_TAGS')?.split(" ") ?: []

def testTags = [
        apiTests: "API",
        uiTests: "UI",
        smokeTests: "Smoke",
        regressionTests: "Regression"
]

def configureTestTask = { taskName, tag ->
    tasks.register(taskName, Test) {
        useJUnitPlatform {
            includeTags tag
        }
        systemProperties(System.getProperties())
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat "full"
            showStandardStreams = true
        }
    }
}

testTags.each { taskName, tag ->
    configureTestTask(taskName, tag)
}

test {
    useJUnitPlatform() {
        includeTags(*selectedTags) // передаем selectedTags как аргумент
    }
    systemProperties(System.getProperties())
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}
